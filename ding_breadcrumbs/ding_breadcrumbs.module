<?php
/**
 * @file
 * Provides custom breadcrumbs for Ding pages.
 */

/**
 * Implementation of hook_nodeapi().
 */
function ding_breadcrumbs_nodeapi(&$node, $op, $a3 = NULL, $a4 = NULL) {
  // Only on viewing a full node on a page by itself.
  if ($op == 'view' && !$a3 && $a4) {
    $trail = array(
      l(t('Home'), '<front>'),
    );

    if ($node->type == 'library') {
      $trail[] = l(t('Libraries'), 'biblioteker');
    }
    elseif ($node->type == 'page' && function_exists('menu_breadcrumb_init')) {
      // Since menu_breadcrumb does not expose their API, weâ€™ll have to
      // resort monkeypatching the $conf array before re-running their
      // init function.
      global $conf;
      $previous_value = variable_get('menu_breadcrumb_determine_menu', NULL);

      $conf['menu_breadcrumb_determine_menu'] = 1;
      menu_breadcrumb_init();

      // Revert to the previous value, unsetting if variable_get returned
      // NULL, meaning there was no previous value.
      if (is_null($previous_value)) {
        unset($conf['menu_breadcrumb_determine_menu']);
      }
      else {
        $conf['menu_breadcrumb_determine_menu'] = $previous_value;
      }
    }
    else {
      if (isset($node->field_library_ref[0]['nid'])) {
        $trail[] = l(t('Libraries'), 'biblioteker');
        $nid = $node->field_library_ref[0]['nid'];

        $trail[] = l($library->title, 'node/' . $nid);

        if ($node->type == 'article') {
          $trail[] = l(t('Blog'), 'node/' . $nid . '/blog');
        }
        elseif ($node->type == 'event') {
          $trail[] = l(t('Events'), 'node/' . $nid . '/arrangementer');
        }
      }
    }

    if (count($trail) > 1) {
      drupal_set_breadcrumb($trail);
    }
  }
}

/**
 * Set breadcrumbs for library-related pages.
 *
 * @param object $library
 *    The library node.
 */
function ding_breadcrumbs_set_library($library) {
  // Get all URL components from Drupal's arg function.
  $path_copy = $path = arg();

  // The first part should always be either 'biblioteker' or 'node'.
  // We add that manually, so remove it from the path.
  array_shift($path_copy);

  $trail = array(
    l(t('Home'), '<front>'),
    l(t('Libraries'), 'biblioteker'),
  );

  // Lets take all the path components before the last one.
  while (count($path_copy) > 1) {
    $piece = array_shift($path_copy);
    $index = array_search($piece, $path);
    if ($index == 1) {
      $trail[] = l($library->title, 'node/' . $library->nid);
    }
    else {
      $trail[] = l(_ding_breadcrumbs_get_name($path, $piece, $index), implode('/', array_slice($path, 0, $index)));
    }
  }

  // For the last component, we do mostly the same, besides the link.
  $piece = array_shift($path_copy);
  $index = array_search($piece, $path);
  if ($index > 1) {
    $trail[] = check_plain(_ding_breadcrumbs_get_name($path, $piece, $index));
  }

  drupal_set_breadcrumb($trail);
}

/**
 * Try to figure out the real name of a path component.
 */
function _ding_breadcrumbs_get_name($path, $piece, $index) {
  if ($index == 2) {
    return drupal_ucfirst($piece);
  }
  return t('Unknown');
}

